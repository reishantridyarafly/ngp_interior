name: Deploy Laravel Project on push

on:
  push:
    branches:
      - main

jobs:
  web-deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code from the repository
      - name: Get the latest code
        uses: actions/checkout@v3

      # Step 2: Add PPA repository for PHP 8.2
      - name: Add PHP 8.2 PPA and install PHP 8.2
        run: |
          sudo add-apt-repository ppa:ondrej/php -y
          sudo apt update
          sudo apt install -y php8.2 php8.2-cli php8.2-fpm php8.2-mbstring php8.2-xml php8.2-curl php8.2-zip php8.2-bcmath php8.2-sqlite3

      # Step 3: Set up Node.js (required for some Laravel features like Vite or Mix)
      - name: Set up Node.js
        uses: actions/setup-node@v3

      # Step 4: Copy .env if not present
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      # Step 5: Run composer update to ensure dependencies are updated
      - name: Run composer update
        run: composer update --no-interaction --prefer-dist

      # Step 6: Install Dependencies
      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      # Step 7: Generate Laravel application key
      - name: Generate key
        run: php artisan key:generate

      # Step 8: Generate storage link
      - name: Generate storage link
        run: php artisan storage:link

      # Step 9: Set directory permissions for storage and cache
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      # Step 10: Run migrations (if using a database, ensure database is set up)
      - name: Run migrations
        run: php artisan migrate --force

      # Step 11: Sync files to the server via FTP
      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /path/to/your/server/directory

      # Step 12: Cache Composer dependencies for faster subsequent builds
      - name: Cache Composer Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
